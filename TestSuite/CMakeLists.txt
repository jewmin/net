# cmake版本
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)

# 项目名
PROJECT(test_suite VERSION 1.0.0)
# MESSAGE(${PROJECT_NAME})
# MESSAGE(${PROJECT_SOURCE_DIR})

# 添加文件
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR} test_srcs)
MESSAGE(${test_srcs})

# 设置
SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_SUPPRESS_REGENERATION true)

IF (MSVC)
	SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
	SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	ADD_DEFINITIONS(-DUSE_VLD)
	ADD_COMPILE_OPTIONS(/utf-8)
ELSE()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
ENDIF()

IF(CMAKE_COMPILER_IS_GNUCXX)
	ADD_DEFINITIONS(-std=c++11)
ENDIF()

# 第三方类库
INCLUDE_DIRECTORIES(${libnet_SOURCE_DIR})
INCLUDE_DIRECTORIES(${libnet_SOURCE_DIR}/libuv/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/gtest/include)
IF (MSVC)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/vld/include)
ENDIF()

LINK_DIRECTORIES(${libnet_SOURCE_DIR}/libuv/lib)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/gtest/lib)
IF (MSVC)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/vld/lib)
ENDIF()

# 生成可执行文件
ADD_EXECUTABLE(${PROJECT_NAME} ${test_srcs})
IF (MSVC)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} libnet libuv gtestd gmockd advapi32 iphlpapi psapi ws2_32 userenv vld)
ELSE()
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} net uv gtest gmock)
ENDIF()