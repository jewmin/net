# cmake版本
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)

# 项目名
PROJECT(test_suite VERSION 1.5.2)
# MESSAGE("CMAKE_SOURCE_DIR: " ${CMAKE_SOURCE_DIR})
# MESSAGE("CMAKE_BINARY_DIR: " ${CMAKE_BINARY_DIR})
# MESSAGE("PROJECT_SOURCE_DIR: " ${PROJECT_SOURCE_DIR})
# MESSAGE("PROJECT_BINARY_DIR: " ${PROJECT_BINARY_DIR})
# MESSAGE("CMAKE_CURRENT_SOURCE_DIR: " ${CMAKE_CURRENT_SOURCE_DIR})
# MESSAGE("CMAKE_CURRENT_BINARY_DIR: " ${CMAKE_CURRENT_BINARY_DIR})

# 添加源文件
SET(test_srcs
	${PROJECT_SOURCE_DIR}/Main.cc
	${PROJECT_SOURCE_DIR}/AllocatorTestSuite.cc
	${PROJECT_SOURCE_DIR}/LoggerTestSuite.cc
	${PROJECT_SOURCE_DIR}/RefCountedObjectTestSuite.cc
	${PROJECT_SOURCE_DIR}/IOBufferTestSuite.cc
	${PROJECT_SOURCE_DIR}/NetObjectTestSuite.cc
	${PROJECT_SOURCE_DIR}/ObjectMgrTestSuite.cc
	${PROJECT_SOURCE_DIR}/IPAddressTestSuite.cc
	${PROJECT_SOURCE_DIR}/SocketAddressTestSuite.cc
	${PROJECT_SOURCE_DIR}/SocketImplTestSuite.cc
	${PROJECT_SOURCE_DIR}/SocketTestSuite.cc
	${PROJECT_SOURCE_DIR}/ReactorTestSuite.cc
	${PROJECT_SOURCE_DIR}/ServiceTestSuite.cc
	${PROJECT_SOURCE_DIR}/InterfaceTestSuite.cc
)
# AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR} test_srcs)
# MESSAGE(${test_srcs})

# 生成可执行文件
ADD_EXECUTABLE(${PROJECT_NAME} ${test_srcs})
ADD_DEPENDENCIES(${PROJECT_NAME} gtest)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} net-static ${LIBUV_LIBRARIES} ${GTEST_LIBRARIES})
IF(WINDOWS)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ws2_32 iphlpapi psapi userenv ${VLD_LIBRARIES})
ENDIF()