# cmake版本
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)

# 项目名
PROJECT(test VERSION 2.3.0)

# 生成可执行文件
ADD_EXECUTABLE(bench_server ProtocolDef.h BenchServer.h BenchServer.cc ServerMain.cc)
ADD_EXECUTABLE(bench_client ProtocolDef.h BenchClient.h BenchClient.cc ClientMain.cc)
ADD_EXECUTABLE(test_dll DllMain.cc)
IF(WINDOWS)
	TARGET_LINK_LIBRARIES(bench_server libnet-static vld ws2_32 iphlpapi psapi userenv debug libuvd optimized libuv)
	TARGET_LINK_LIBRARIES(bench_client libnet-static vld ws2_32 iphlpapi psapi userenv debug libuvd optimized libuv)
	TARGET_LINK_LIBRARIES(test_dll libnet vld ws2_32 iphlpapi psapi userenv debug libuvd optimized libuv)
	TARGET_COMPILE_DEFINITIONS(test_dll PRIVATE USING_NET_SHARED)
	IF(TCMALLOC)
		TARGET_LINK_LIBRARIES(bench_server debug libtcmalloc_minimal-debug optimized libtcmalloc_minimal)
		TARGET_LINK_LIBRARIES(bench_client debug libtcmalloc_minimal-debug optimized libtcmalloc_minimal)
		TARGET_LINK_LIBRARIES(test_dll debug libtcmalloc_minimal-debug optimized libtcmalloc_minimal)
	ENDIF()
ELSEIF(LINUX)
	TARGET_LINK_LIBRARIES(bench_server net-static debug uvd optimized uv)
	TARGET_LINK_LIBRARIES(bench_client net-static debug uvd optimized uv)
	TARGET_LINK_LIBRARIES(test_dll net debug uvd optimized uv)
	IF(TCMALLOC)
		TARGET_LINK_LIBRARIES(bench_server tcmalloc_minimal)
		SET_TARGET_PROPERTIES(bench_server PROPERTIES LINK_FLAGS "-static-libstdc++")
		TARGET_LINK_LIBRARIES(bench_client tcmalloc_minimal)
		SET_TARGET_PROPERTIES(bench_client PROPERTIES LINK_FLAGS "-static-libstdc++")
		TARGET_LINK_LIBRARIES(test_dll tcmalloc_minimal)
		# SET_TARGET_PROPERTIES(test_dll PROPERTIES LINK_FLAGS "-static-libstdc++")
	ENDIF()
ENDIF()
